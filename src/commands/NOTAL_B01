{ Spesifikasi : menghasilkan nilai random antara 0 hingga MAX dengan menggunakan algoritma RNG }
{ Import library time untuk menggunakan fungsi time.sleep() }

import time

function RNG(MAX: int) -> int
{ Menghasilkan nilai random antara 0 hingga MAX }
{ I.S. MAX telah terdefinisi }
{ F.S. Menghasilkan nilai random }

KAMUS LOKAL
    a, c, m, seed, x, i : integer

ALGORITMA
    a <- 1664525               { menginisialisasi nilai konstanta a }
    c <- 1013904223            { menginisialisasi nilai konstanta c }
    m <- 2 ** 32               { menginisialisasi nilai konstanta m }
    seed <- int(time.time() * 1000) % m  { menghasilkan nilai seed dari waktu saat ini }
    x <- seed                  { menginisialisasi nilai awal x dengan seed }
    for i in range(10):        { melakukan iterasi sebanyak 10 kali }
        x <- (a * x + c) % m   { melakukan perhitungan RNG }
    time.sleep(0.2)            { memberikan jeda selama 0.2 detik }
    return x % (MAX + 1)       { mengembalikan nilai random antara 0 hingga MAX }

function RNGnoNull(MAX: int) -> int
{ Menghasilkan nilai random antara 1 hingga MAX, menghindari nilai 0 }
{ I.S. MAX telah terdefinisi }
{ F.S. Menghasilkan nilai random }

KAMUS LOKAL
    hasil : integer

ALGORITMA
    hasil <- RNG(MAX)          { memanggil fungsi RNG untuk menghasilkan nilai random }
    if hasil = 0 or hasil = False: { melakukan pengecekan apakah nilai random adalah 0 atau False }
        return RNGnoNull(MAX)  { jika ya, maka memanggil kembali fungsi RNGnoNull }
    else:
        return hasil           { jika tidak, mengembalikan nilai hasil }

{ Menggunakan fungsi RNGnoNull untuk menghasilkan nilai random }
# DEBUG
# for i in range(1000):
#    print(RNGnoNull(5))
